{"mappings":"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","sources":["<anon>","node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-f14bcab4fa234042.js","src/index.jsx","src/App.jsx","Modules/MiniFramework.js","src/image.jsx","node_modules/@parcel/runtime-js/lib/runtime-5d2fcca757068c3e.js","src/Context.jsx","src/State1.jsx","src/State2.jsx","src/MapComp.jsx","src/Effect.jsx","src/StyledComp.jsx","src/Modal.jsx"],"sourcesContent":["\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire94c2\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire94c2\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"27Lyk\", function(module, exports) {\n\n$parcel$export(module.exports, \"register\", () => $18c11f3350a906ea$export$6503ec6e8aabbaf, (v) => $18c11f3350a906ea$export$6503ec6e8aabbaf = v);\nvar $18c11f3350a906ea$export$6503ec6e8aabbaf;\nvar $18c11f3350a906ea$export$f7ad0328861e2f03;\n\"use strict\";\nvar $18c11f3350a906ea$var$mapping = new Map();\nfunction $18c11f3350a906ea$var$register(baseUrl, manifest) {\n    for(var i = 0; i < manifest.length - 1; i += 2)$18c11f3350a906ea$var$mapping.set(manifest[i], {\n        baseUrl: baseUrl,\n        path: manifest[i + 1]\n    });\n}\nfunction $18c11f3350a906ea$var$resolve(id) {\n    var resolved = $18c11f3350a906ea$var$mapping.get(id);\n    if (resolved == null) throw new Error(\"Could not resolve bundle with id \" + id);\n    return new URL(resolved.path, resolved.baseUrl).toString();\n}\n$18c11f3350a906ea$export$6503ec6e8aabbaf = $18c11f3350a906ea$var$register;\n$18c11f3350a906ea$export$f7ad0328861e2f03 = $18c11f3350a906ea$var$resolve;\n\n});\n\nvar $eb69aaa2e6e5b5be$exports = {};\n\n(parcelRequire(\"27Lyk\")).register(new URL(\"\", import.meta.url).toString(), JSON.parse('[\"9TZ7I\",\"index.6d309c9d.js\",\"eeVe6\",\"1.e0d42b70.jpg\",\"kz2Nc\",\"index.081ddeee.css\"]'));\n\nconst $2cab054d75d19b20$var$MiniFramework = {\n    currentComponent: null,\n    // Aktualny komponent, który jest renderowany\n    stateIndex: 0,\n    // Indeks stanu dla hooków\n    effectIndex: 0,\n    // Indeks efektu dla hooków\n    stateMap: new WeakMap(),\n    // Mapa przechowująca stany komponentów\n    effectMap: new WeakMap(),\n    // Mapa przechowująca efekty komponentów\n    componentMap: new WeakMap(),\n    // Mapa przechowująca komponenty i ich odpowiadające im elementy DOM\n    contextMap: new WeakMap(),\n    // Mapy WeakMap do przechowywania wartości kontekstów\n    // Funkcja do tworzenia elementu\n    createElement: (tag, props, ...children)=>{\n        if (typeof tag === \"function\" && !tag.isReactComponent) // Jeżeli tag jest funkcją i nie jest komponentem klasowym\n        return {\n            tag: tag,\n            props: {\n                ...props,\n                children: children\n            }\n        };\n        if (tag.prototype && tag.isReactComponent) {\n            // Jeżeli tag jest komponentem klasowym\n            const componentInstance = new tag(props); // Tworzy instancję komponentu\n            componentInstance.willInit(); // Metoda wywoływana przed montowaniem komponentu\n            const componentElement = componentInstance.mount(); // Montuje komponent\n            componentInstance.didInit(); // Metoda wywoływana po zamontowaniu komponentu\n            return componentElement;\n        }\n        // Zwraca obiekt reprezentujący element DOM\n        return {\n            tag: tag,\n            props: {\n                ...props,\n                children: children\n            }\n        };\n    },\n    //! Skonczyć portale !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n    // Funkcja tworząca portal\n    createPortal: (frameworkEl, targetContainer)=>{\n        if (!targetContainer) // Jeśli kontener nie został przekazany, domyślnie renderujemy do \"modal-root\"\n        targetContainer = document.getElementById(\"modal-root\");\n        if (!targetContainer) {\n            console.error(\"Target container for portal not found.\");\n            return null;\n        }\n        $2cab054d75d19b20$var$MiniFramework.render(frameworkEl, targetContainer, true);\n        return null;\n    },\n    // Funkcja do renderowania elementu w kontenerze DOM\n    render: function(frameworkEl, container, replace = false) {\n        if (frameworkEl && frameworkEl.props?.isPortal) {\n            console.log(typeof frameworkEl.tag);\n            this.createPortal(frameworkEl.content, frameworkEl.targetContainer);\n            return;\n        }\n        // Obsługa tablicy elementów\n        if (Array.isArray(frameworkEl)) {\n            if (replace) container.innerHTML = \"\"; // Opróżnia kontener, jeśli replace jest true\n            frameworkEl.forEach((element)=>{\n                this.render(element, container, false); // Rekurencyjnie renderuje każdy element z tablicy\n            });\n            return;\n        }\n        // Sprawdzamy, czy to jest portal\n        if (frameworkEl?.props?.isPortal) {\n            this.createPortal(frameworkEl.content, frameworkEl.targetContainer);\n            return;\n        }\n        // Obsługa stringów i liczb\n        if (typeof frameworkEl === \"string\" || typeof frameworkEl === \"number\") {\n            if (replace) container.innerHTML = \"\"; // Opróżnia kontener, jeśli replace jest true\n            container.appendChild(document.createTextNode(frameworkEl)); // Dodaje tekst do kontenera\n            return;\n        }\n        // Obsługa komponentów funkcyjnych\n        if (frameworkEl && typeof frameworkEl.tag === \"function\") {\n            this.currentComponent = frameworkEl; // Ustawia aktualny komponent\n            this.stateIndex = 0; // Resetuje indeks stanu\n            this.effectIndex = 0; // Resetuje indeks efektu\n            const componentElement = frameworkEl.tag(frameworkEl.props); // Wywołuje funkcję komponentu\n            this.currentComponent = null;\n            const domNode = this.render(componentElement, container, replace); // Rekurencyjnie renderuje element\n            this.componentMap.set(frameworkEl, domNode); // Mapuje komponent na element DOM\n            return domNode;\n        }\n        if (replace && container.firstChild) {\n            const oldComponent = this.componentMap.get(container.firstChild);\n            if (oldComponent) this.cleanupEffects(oldComponent); // Czyszczenie efektów, gdy komponent zostaje zastąpiony\n        }\n        // Tworzy rzeczywisty element DOM dla standardowych tagów\n        const actualDOMElement = document.createElement(frameworkEl?.tag);\n        if (frameworkEl?.props && frameworkEl?.props.className) actualDOMElement.className = frameworkEl.props.className; // Zastosowanie klasy CSS\n        // Aplikuje atrybuty (props) do utworzonego elementu, z wyłączeniem dzieci\n        Object.keys(frameworkEl?.props || {}).filter((key)=>key !== \"children\").forEach((property)=>{\n            if (property.startsWith(\"on\")) // Dodaje event listener, jeśli atrybut zaczyna się od \"on\"\n            actualDOMElement.addEventListener(property.substring(2).toLowerCase(), frameworkEl.props[property]);\n            else if (property === \"className\") // Obsługa klasy CSS\n            actualDOMElement.className = frameworkEl.props[property];\n            else // Inne atrybuty\n            actualDOMElement[property] = frameworkEl.props[property];\n        });\n        // Rekurencyjnie renderuje dzieci\n        frameworkEl?.props?.children?.forEach((child)=>{\n            this.render(child, actualDOMElement);\n        });\n        // Zastępuje zawartość kontenera, jeśli replace jest true\n        if (replace) container.innerHTML = \"\";\n        container.appendChild(actualDOMElement);\n        // Uruchamia efekty po renderowaniu\n        this.runEffects(frameworkEl);\n        return actualDOMElement; // Zwraca element DOM\n    },\n    // Hook useState\n    useState: function(initialState) {\n        const component = this.currentComponent; // Pobiera aktualny komponent\n        if (!component) throw new Error(\"useState must be called within a component\"); // Błąd, jeśli useState jest używany poza komponentem\n        const stateIndex = this.stateIndex++; // Inkrementuje indeks stanu\n        let componentState = this.stateMap.get(component) || []; // Pobiera stan komponentu\n        if (!componentState[stateIndex]) componentState[stateIndex] = initialState; // Inicjalizuje stan, jeśli nie jest jeszcze ustawiony\n        const setState = (newState)=>{\n            const currentState = componentState[stateIndex]; // Bieżący stan\n            const updatedState = typeof newState === \"function\" ? newState(currentState) : newState; // Nowy stan\n            if (updatedState !== currentState) {\n                componentState[stateIndex] = updatedState; // Aktualizuje stan, jeśli się zmienił\n                $2cab054d75d19b20$var$MiniFramework.update(component); // Aktualizuje komponent\n            }\n        };\n        this.stateMap.set(component, componentState); // Aktualizuje mapę stanów\n        return [\n            componentState[stateIndex],\n            setState\n        ]; // Zwraca stan i funkcję do jego aktualizacji\n    },\n    // Hook useEffect\n    useEffect: function(effect, deps) {\n        const component = this.currentComponent; // Pobieramy aktualny komponent\n        if (!component) throw new Error(\"useEffect must be called within a component\");\n        const effectIndex = this.effectIndex++; // Pobieramy bieżący indeks efektu\n        let componentEffects = this.effectMap.get(component) || [];\n        const prevEffect = componentEffects[effectIndex];\n        // Sprawdzamy, czy zależności uległy zmianie\n        const hasChanged = !prevEffect || !deps || deps.some((dep, i)=>dep !== prevEffect.deps[i]);\n        if (hasChanged) {\n            if (prevEffect && prevEffect.cleanup) prevEffect.cleanup(); // Czyszczenie poprzedniego efektu, jeśli istnieje\n            const cleanup = effect(); // Wywołanie efektu i przechwycenie funkcji czyszczącej\n            componentEffects[effectIndex] = {\n                deps: deps,\n                cleanup: cleanup\n            };\n        }\n        this.effectMap.set(component, componentEffects); // Zapis efektów w mapie\n    },\n    // Uruchamianie efektów po renderowaniu komponentu\n    runEffects: function(component) {\n        const componentEffects = this.effectMap.get(component) || []; // Pobiera efekty komponentu\n        componentEffects.forEach((effect)=>{\n            if (effect.cleanup) effect.cleanup(); // Wywołuje funkcję czyszczącą efektu, jeśli istnieje\n            effect.cleanup = effect.effect(); // Uruchamia efekt i zapisuje funkcję czyszczącą\n        });\n    },\n    // Obsługa przerywania efektów podczas odmontowywania komponentu\n    cleanupEffects: function(component) {\n        const componentEffects = this.effectMap.get(component) || [];\n        componentEffects.forEach((effect)=>{\n            if (effect.cleanup) effect.cleanup(); // Wywołanie wszystkich funkcji czyszczących\n        });\n        this.effectMap.delete(component); // Usunięcie efektów z mapy po odmontowaniu\n    },\n    diff: function(oldNode, newNode) {\n        if (!oldNode || !newNode) return false; // Sprawdzenie, czy któryś z węzłów jest null\n        if (typeof oldNode !== typeof newNode) return false;\n        if (typeof newNode === \"string\" || typeof newNode === \"number\") return oldNode === newNode;\n        if (oldNode.tag !== newNode.tag) return false;\n        const oldProps = oldNode.props || {};\n        const newProps = newNode.props || {};\n        const oldKeys = Object.keys(oldProps);\n        const newKeys = Object.keys(newProps);\n        if (oldKeys.length !== newKeys.length) return false;\n        for (let key of newKeys){\n            if (key === \"children\") continue;\n            if (oldProps[key] !== newProps[key]) return false;\n        }\n        return true;\n    },\n    // Aktualizacja komponentu\n    update: function(component) {\n        const oldNode = this.componentMap.get(component);\n        this.currentComponent = component; // Ustawiamy `currentComponent`, żeby działały hooki\n        const newNode = component.tag(component.props); // Tworzymy nowy element komponentu\n        if (component?.props?.isPortal) this.createPortal(component.props.content, component.props.targetContainer);\n        if (!this.diff(oldNode, newNode)) {\n            this.cleanupEffects(component); // Czyścimy efekty przed ponownym renderowaniem\n            const domNode = this.render(component, oldNode, true);\n            this.componentMap.set(component, domNode);\n        } else this.runEffects(component);\n        this.currentComponent = null; // Czyszczenie `currentComponent` po aktualizacji\n    },\n    // Funkcja do tworzenia kontekstu\n    createContext: function(defaultValue) {\n        const context = {\n            defaultValue: defaultValue,\n            // Wartość domyślna kontekstu\n            state: defaultValue,\n            // Bieżący stan kontekstu\n            subscribers: new Set() // Zbiór subskrybentów aktualizacji kontekstu\n        };\n        // Funkcja do modyfikacji wartości kontekstu\n        function setContextValue(newValue) {\n            context.state = newValue; // Ustawia nową wartość stanu kontekstu\n            context.subscribers.forEach((callback)=>callback(newValue)); // Powiadamia subskrybentów o zmianie\n        }\n        // Komponent Provider umożliwiający aktualizację kontekstu\n        function Provider({ value: value, children: children }) {\n            if (value !== undefined) setContextValue(value); // Aktualizuje wartość kontekstu, jeśli została podana\n            return children; // Renderuje dzieci\n        }\n        // Hook useContext do uzyskiwania wartości kontekstu\n        function useContext() {\n            const [value, setValue] = $2cab054d75d19b20$var$MiniFramework.useState(context.state); // Uzyskuje aktualną wartość kontekstu\n            $2cab054d75d19b20$var$MiniFramework.useEffect(()=>{\n                const updateValue = (newValue)=>setValue(newValue); // Funkcja aktualizująca stan z nową wartością kontekstu\n                context.subscribers.add(updateValue); // Dodaje funkcję aktualizującą do subskrybentów\n                return ()=>context.subscribers.delete(updateValue); // Usuwa funkcję z subskrybentów podczas odmontowania\n            }, []);\n            return value; // Zwraca wartość kontekstu\n        }\n        return {\n            Provider: Provider,\n            useContext: // Komponent Provider\n            useContext,\n            setContextValue: // Hook useContext\n            setContextValue // Funkcja do zmiany wartości kontekstu\n        };\n    },\n    useStyle: function(styles) {\n        const component = this.currentComponent;\n        if (!component) throw new Error(\"useStyle must be called within a component\");\n        const styleTagId = `style-${component.tag.name}`;\n        let styleTag = document.getElementById(styleTagId);\n        if (!styleTag) {\n            styleTag = document.createElement(\"style\");\n            styleTag.id = styleTagId;\n            document.head.appendChild(styleTag);\n        }\n        const className = `class-${component.tag.name}-${Math.random().toString(36).substr(2, 5)}`;\n        // Konwersja stylów z camelCase na kebab-case\n        const css = `\n\t\t\t.${className} {\n\t\t\t\t${Object.entries(styles).map(([key, value])=>{\n            const kebabKey = key.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n            return `${kebabKey}: ${value};`;\n        }).join(\" \")}\n\t\t\t}\n\t\t`;\n        // Dodawanie nowego CSS do istniejącego styleTag\n        styleTag.appendChild(document.createTextNode(css));\n        return className;\n    }\n};\n// Klasa bazowa dla komponentów\nclass $2cab054d75d19b20$var$MiniComponent {\n    constructor(props){\n        this.props = props; // Przypisanie właściwości (props) do instancji komponentu\n        this.state = {}; // Inicjalizacja stanu komponentu jako pustego obiektu\n        this.willInit(); // Wywołanie metody willInit (przed montowaniem komponentu)\n        this.mount(); // Wywołanie metody mount (montowanie komponentu)\n        this.didInit(); // Wywołanie metody didInit (po zamontowaniu komponentu)\n    }\n    willInit() {}\n    didInit() {}\n    didUpdate() {}\n    mainDiv() {\n        this.name = this.constructor.name; // Przypisuje nazwę klasy do zmiennej name\n        return `${this.constructor.name}`; // Zwraca nazwę klasy jako string\n    }\n    // Ustawia nowy stan komponentu\n    setState(partialState) {\n        this.state = {\n            ...this.state,\n            ...partialState\n        }; // Aktualizuje stan komponentu\n        $2cab054d75d19b20$var$MiniFramework.update(this); // Aktualizuje komponent w DOM\n    }\n    // Metoda montująca, musi być zaimplementowana przez podklasę\n    mount() {\n        throw new Error(\"Component subclass must implement mount method.\"); // Rzuca błąd, jeśli metoda nie została zaimplementowana\n    }\n    // Oznacza, że jest to komponent kompatybilny z Reactem\n    static isReactComponent = true;\n}\n// Dodanie klasy MiniComponent do MiniFramework jako jego składnik\n$2cab054d75d19b20$var$MiniFramework.Component = $2cab054d75d19b20$var$MiniComponent;\nvar $2cab054d75d19b20$export$2e2bcd8739ae039 = $2cab054d75d19b20$var$MiniFramework;\n\n\n\nvar $da213b5f3a51cb98$exports = {};\n$da213b5f3a51cb98$exports = new URL(\"1.e0d42b70.jpg\", import.meta.url).toString();\n\n\n\nconst $5ef62667ecd041d3$export$8422ab6fc7dd9f03 = (0, $2cab054d75d19b20$export$2e2bcd8739ae039).createContext(\"cok\");\n\n\nconst $c289019ba50cf871$var$ImageComp = ()=>{\n    const contextValue = (0, $5ef62667ecd041d3$export$8422ab6fc7dd9f03).useContext();\n    return (0, $2cab054d75d19b20$export$2e2bcd8739ae039).createElement(\"div\", null, (0, $2cab054d75d19b20$export$2e2bcd8739ae039).createElement(\"img\", {\n        name: \"image\",\n        id: \"image\",\n        src: (0, (/*@__PURE__*/$parcel$interopDefault($da213b5f3a51cb98$exports))),\n        alt: \"fireSpot\"\n    }), (0, $2cab054d75d19b20$export$2e2bcd8739ae039).createElement(\"br\", null), (0, $2cab054d75d19b20$export$2e2bcd8739ae039).createElement(\"label\", {\n        for: \"image\",\n        style: \"color: white\"\n    }, \"Importowane zdj\\u0119cie w jsx\"), (0, $2cab054d75d19b20$export$2e2bcd8739ae039).createElement(\"p\", null, \"Warto\\u015B\\u0107 contextu w innym componencie: \", contextValue.count));\n};\nvar $c289019ba50cf871$export$2e2bcd8739ae039 = $c289019ba50cf871$var$ImageComp;\n\n\n\nconst $6512b2275d19d6b0$var$State1 = (props)=>{\n    const [state, setState] = (0, $2cab054d75d19b20$export$2e2bcd8739ae039).useState({\n        count: 0\n    });\n    const increment = ()=>{\n        setState((prevState)=>({\n                count: prevState.count + 1\n            }));\n    };\n    return (0, $2cab054d75d19b20$export$2e2bcd8739ae039).createElement(\"div\", null, (0, $2cab054d75d19b20$export$2e2bcd8739ae039).createElement(\"p\", null, \"Count: \", state.count), (0, $2cab054d75d19b20$export$2e2bcd8739ae039).createElement(\"button\", {\n        onClick: ()=>{\n            increment();\n            console.log(\"cok\");\n        }\n    }, \"Increment\"), (0, $2cab054d75d19b20$export$2e2bcd8739ae039).createElement(\"p\", {\n        style: \"color: white\"\n    }, \"Zmiana stanu i dynamiczne renderowanie w komponentach funkcyjnych\"));\n};\nvar $6512b2275d19d6b0$export$2e2bcd8739ae039 = $6512b2275d19d6b0$var$State1;\n\n\n\n\nconst $9eaa6316d52a2250$var$State2 = ()=>{\n    const contextValue = (0, $5ef62667ecd041d3$export$8422ab6fc7dd9f03).useContext();\n    const [state, setState] = (0, $2cab054d75d19b20$export$2e2bcd8739ae039).useState(contextValue);\n    const increment = ()=>{\n        setState((prevState)=>({\n                count: prevState.count + 1\n            }));\n    };\n    // Funkcja do aktualizacji wartości kontekstu\n    const updateContext = ()=>{\n        (0, $5ef62667ecd041d3$export$8422ab6fc7dd9f03).setContextValue({\n            count: state.count + 1\n        });\n        console.log(contextValue);\n    };\n    return (0, $2cab054d75d19b20$export$2e2bcd8739ae039).createElement(\"div\", null, (0, $2cab054d75d19b20$export$2e2bcd8739ae039).createElement(\"p\", null, \"Count: \", contextValue.count), (0, $2cab054d75d19b20$export$2e2bcd8739ae039).createElement(\"button\", {\n        onClick: ()=>{\n            increment();\n            updateContext(); // Aktualizuj kontekst po inkrementacji\n        }\n    }, \"Increment\"), (0, $2cab054d75d19b20$export$2e2bcd8739ae039).createElement(\"p\", {\n        style: {\n            color: \"white\"\n        }\n    }, \"Contextowa zmiana stanu\"));\n};\nvar $9eaa6316d52a2250$export$2e2bcd8739ae039 = $9eaa6316d52a2250$var$State2;\n\n\n\nconst $61336699e3de5fa0$var$MapComp = ()=>{\n    const exampleStrings = [\n        \"Hello, world!\",\n        \"JavaScript is awesome.\",\n        \"Let's learn to code.\",\n        \"Arrays can hold multiple values.\",\n        \"This is a string example.\",\n        \"Have a great day!\",\n        \"Coding is fun!\",\n        \"Happy coding!\",\n        \"OpenAI creates amazing tools.\",\n        \"ChatGPT is here to help.\"\n    ];\n    return (0, $2cab054d75d19b20$export$2e2bcd8739ae039).createElement(\"div\", null, exampleStrings.map((elem)=>{\n        return (0, $2cab054d75d19b20$export$2e2bcd8739ae039).createElement(\"p\", {\n            style: \"\"\n        }, elem);\n    }), (0, $2cab054d75d19b20$export$2e2bcd8739ae039).createElement(\"p\", {\n        style: \"color: white\"\n    }, \"Generowanie dynamicznych list znacznik\\xf3w\"));\n};\nvar $61336699e3de5fa0$export$2e2bcd8739ae039 = $61336699e3de5fa0$var$MapComp;\n\n\n\nconst $034a0d293744ebbc$var$Effect = ()=>{\n    const [count, setCount] = (0, $2cab054d75d19b20$export$2e2bcd8739ae039).useState({\n        count: 0\n    });\n    (0, $2cab054d75d19b20$export$2e2bcd8739ae039).useEffect(()=>{\n        console.log(\"Component mounted or updated!\");\n        // Cleanup logic when the component unmounts or before the next effect\n        return ()=>{\n            console.log(\"Cleanup on unmount or update\");\n        };\n    }, [\n        count\n    ]);\n    return (0, $2cab054d75d19b20$export$2e2bcd8739ae039).createElement(\"div\", null, (0, $2cab054d75d19b20$export$2e2bcd8739ae039).createElement(\"p\", null, \"Count: \", count.count), (0, $2cab054d75d19b20$export$2e2bcd8739ae039).createElement(\"button\", {\n        onClick: ()=>setCount((prevState)=>({\n                    count: prevState.count + 1\n                }))\n    }, \"Increment\"), (0, $2cab054d75d19b20$export$2e2bcd8739ae039).createElement(\"p\", {\n        style: \"color: white\"\n    }, \"useEffect, metoda cyklu \\u017Cycia komponentu \"));\n};\nvar $034a0d293744ebbc$export$2e2bcd8739ae039 = $034a0d293744ebbc$var$Effect;\n\n\n\nconst $6a9dd7e1106c2c3c$var$StyledComp = ()=>{\n    const className = (0, $2cab054d75d19b20$export$2e2bcd8739ae039).useStyle({\n        backgroundColor: \"lightblue\",\n        padding: \"10px\",\n        borderRadius: \"5px\",\n        border: \"1px solid black\"\n    });\n    return (0, $2cab054d75d19b20$export$2e2bcd8739ae039).createElement(\"div\", null, (0, $2cab054d75d19b20$export$2e2bcd8739ae039).createElement(\"div\", {\n        className: className\n    }, (0, $2cab054d75d19b20$export$2e2bcd8739ae039).createElement(\"p\", null, \"This component is styled using CSS-in-JS!\")), (0, $2cab054d75d19b20$export$2e2bcd8739ae039).createElement(\"p\", null, \"Komponent stylowany za pomoc\\u0105 JS-CSS\"));\n};\nvar $6a9dd7e1106c2c3c$export$2e2bcd8739ae039 = $6a9dd7e1106c2c3c$var$StyledComp;\n\n\n\n\nconst $c6b9936062d8adbf$var$Modal = ({ children: children })=>{\n    const style = {\n        backgroundColor: \"rgba(0,0,0,0.5)\",\n        padding: \"20px\",\n        borderRadius: \"10px\",\n        position: \"absolute\",\n        width: \"90vw\",\n        height: \"90vh\"\n    };\n    return (0, $2cab054d75d19b20$export$2e2bcd8739ae039).createPortal((0, $2cab054d75d19b20$export$2e2bcd8739ae039).createElement(\"div\", {\n        style: style,\n        isPortal: true,\n        className: \"modal\"\n    }, \"cok\"));\n};\nvar $c6b9936062d8adbf$export$2e2bcd8739ae039 = $c6b9936062d8adbf$var$Modal;\n\n\nfunction $1b8e0994176c9ade$export$2e2bcd8739ae039() {\n    return (0, $2cab054d75d19b20$export$2e2bcd8739ae039).createElement((0, $5ef62667ecd041d3$export$8422ab6fc7dd9f03).Provider, {\n        value: {\n            count: 0\n        }\n    }, (0, $2cab054d75d19b20$export$2e2bcd8739ae039).createElement(\"div\", null, (0, $2cab054d75d19b20$export$2e2bcd8739ae039).createElement(\"header\", null, (0, $2cab054d75d19b20$export$2e2bcd8739ae039).createElement(\"h1\", null, \"Welcome to Mini.js\")), (0, $2cab054d75d19b20$export$2e2bcd8739ae039).createElement(\"div\", {\n        id: \"container\"\n    }, (0, $2cab054d75d19b20$export$2e2bcd8739ae039).createElement((0, $c289019ba50cf871$export$2e2bcd8739ae039), null), (0, $2cab054d75d19b20$export$2e2bcd8739ae039).createElement(\"hr\", null), (0, $2cab054d75d19b20$export$2e2bcd8739ae039).createElement((0, $6512b2275d19d6b0$export$2e2bcd8739ae039), null), (0, $2cab054d75d19b20$export$2e2bcd8739ae039).createElement(\"hr\", null), (0, $2cab054d75d19b20$export$2e2bcd8739ae039).createElement((0, $61336699e3de5fa0$export$2e2bcd8739ae039), null), (0, $2cab054d75d19b20$export$2e2bcd8739ae039).createElement(\"hr\", null), (0, $2cab054d75d19b20$export$2e2bcd8739ae039).createElement((0, $034a0d293744ebbc$export$2e2bcd8739ae039), null), (0, $2cab054d75d19b20$export$2e2bcd8739ae039).createElement(\"hr\", null), (0, $2cab054d75d19b20$export$2e2bcd8739ae039).createElement((0, $9eaa6316d52a2250$export$2e2bcd8739ae039), null), (0, $2cab054d75d19b20$export$2e2bcd8739ae039).createElement(\"hr\", null), (0, $2cab054d75d19b20$export$2e2bcd8739ae039).createElement((0, $6a9dd7e1106c2c3c$export$2e2bcd8739ae039), null), (0, $2cab054d75d19b20$export$2e2bcd8739ae039).createElement(\"hr\", null), (0, $2cab054d75d19b20$export$2e2bcd8739ae039).createElement((0, $c6b9936062d8adbf$export$2e2bcd8739ae039), null)), (0, $2cab054d75d19b20$export$2e2bcd8739ae039).createElement(\"footer\", null)));\n}\n\n\n\n\n// Initialize and render the App component\n(0, $2cab054d75d19b20$export$2e2bcd8739ae039).render((0, $1b8e0994176c9ade$export$2e2bcd8739ae039)(), document.querySelector(\"#root\"));\n\n\n//# sourceMappingURL=index.6d309c9d.js.map\n","\"use strict\";\n\nvar mapping = new Map();\nfunction register(baseUrl, manifest) {\n  for (var i = 0; i < manifest.length - 1; i += 2) {\n    mapping.set(manifest[i], {\n      baseUrl: baseUrl,\n      path: manifest[i + 1]\n    });\n  }\n}\nfunction resolve(id) {\n  var resolved = mapping.get(id);\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n  return new URL(resolved.path, resolved.baseUrl).toString();\n}\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(new __parcel__URL__(\"\").toString(),JSON.parse(\"[\\\"9TZ7I\\\",\\\"index.6d309c9d.js\\\",\\\"eeVe6\\\",\\\"1.e0d42b70.jpg\\\",\\\"kz2Nc\\\",\\\"index.081ddeee.css\\\"]\"));","import App from \"./App\";\r\nimport MiniFramework from \"../Modules/MiniFramework\";\r\nimport \"./style.css\";\r\n\r\n// Initialize and render the App component\r\nMiniFramework.render(App(), document.querySelector(\"#root\"));\r\n","import MiniFramework from \"../Modules/MiniFramework\";\r\nimport ImageComp from \"./image\";\r\n\r\nimport State1 from \"./State1\";\r\nimport State2 from \"./State2\";\r\nimport MapComp from \"./MapComp\";\r\nimport Effect from \"./Effect\";\r\nimport StyledComp from \"./StyledComp\";\r\nimport { MyContext } from \"./Context\";\r\nimport Modal from \"./Modal\";\r\n\r\nexport default function App() {\r\n\treturn (\r\n\t\t<MyContext.Provider value={{ count: 0 }}>\r\n\t\t\t<div>\r\n\t\t\t\t<header>\r\n\t\t\t\t\t<h1>Welcome to Mini.js</h1>\r\n\t\t\t\t</header>\r\n\t\t\t\t<div id=\"container\">\r\n\t\t\t\t\t<ImageComp />\r\n\t\t\t\t\t<hr />\r\n\t\t\t\t\t<State1 />\r\n\t\t\t\t\t<hr />\r\n\t\t\t\t\t<MapComp />\r\n\t\t\t\t\t<hr />\r\n\t\t\t\t\t<Effect />\r\n\t\t\t\t\t<hr />\r\n\t\t\t\t\t<State2 />\r\n\t\t\t\t\t<hr />\r\n\t\t\t\t\t<StyledComp />\r\n\t\t\t\t\t<hr />\r\n\t\t\t\t\t<Modal />\r\n\t\t\t\t</div>\r\n\t\t\t\t<footer></footer>\r\n\t\t\t</div>\r\n\t\t</MyContext.Provider>\r\n\t);\r\n}\r\n","const MiniFramework = {\r\n\tcurrentComponent: null, // Aktualny komponent, który jest renderowany\r\n\tstateIndex: 0, // Indeks stanu dla hooków\r\n\teffectIndex: 0, // Indeks efektu dla hooków\r\n\tstateMap: new WeakMap(), // Mapa przechowująca stany komponentów\r\n\teffectMap: new WeakMap(), // Mapa przechowująca efekty komponentów\r\n\tcomponentMap: new WeakMap(), // Mapa przechowująca komponenty i ich odpowiadające im elementy DOM\r\n\tcontextMap: new WeakMap(), // Mapy WeakMap do przechowywania wartości kontekstów\r\n\r\n\t// Funkcja do tworzenia elementu\r\n\tcreateElement: (tag, props, ...children) => {\r\n\t\tif (typeof tag === \"function\" && !tag.isReactComponent) {\r\n\t\t\t// Jeżeli tag jest funkcją i nie jest komponentem klasowym\r\n\t\t\treturn { tag, props: { ...props, children } };\r\n\t\t}\r\n\r\n\t\tif (tag.prototype && tag.isReactComponent) {\r\n\t\t\t// Jeżeli tag jest komponentem klasowym\r\n\t\t\tconst componentInstance = new tag(props); // Tworzy instancję komponentu\r\n\t\t\tcomponentInstance.willInit(); // Metoda wywoływana przed montowaniem komponentu\r\n\t\t\tconst componentElement = componentInstance.mount(); // Montuje komponent\r\n\t\t\tcomponentInstance.didInit(); // Metoda wywoływana po zamontowaniu komponentu\r\n\t\t\treturn componentElement;\r\n\t\t}\r\n\r\n\t\t// Zwraca obiekt reprezentujący element DOM\r\n\t\treturn {\r\n\t\t\ttag,\r\n\t\t\tprops: { ...props, children },\r\n\t\t};\r\n\t},\r\n\r\n\t//! Skonczyć portale !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n\t// Funkcja tworząca portal\r\n\tcreatePortal: (frameworkEl, targetContainer) => {\r\n\t\tif (!targetContainer) {\r\n\t\t\t// Jeśli kontener nie został przekazany, domyślnie renderujemy do \"modal-root\"\r\n\t\t\ttargetContainer = document.getElementById(\"modal-root\");\r\n\t\t}\r\n\r\n\t\tif (!targetContainer) {\r\n\t\t\tconsole.error(\"Target container for portal not found.\");\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tMiniFramework.render(frameworkEl, targetContainer, true);\r\n\t\treturn null;\r\n\t},\r\n\r\n\t// Funkcja do renderowania elementu w kontenerze DOM\r\n\trender: function (frameworkEl, container, replace = false) {\r\n\t\tif (frameworkEl && frameworkEl.props?.isPortal) {\r\n\t\t\tconsole.log(typeof frameworkEl.tag);\r\n\t\t\tthis.createPortal(frameworkEl.content, frameworkEl.targetContainer);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Obsługa tablicy elementów\r\n\t\tif (Array.isArray(frameworkEl)) {\r\n\t\t\tif (replace) {\r\n\t\t\t\tcontainer.innerHTML = \"\"; // Opróżnia kontener, jeśli replace jest true\r\n\t\t\t}\r\n\t\t\tframeworkEl.forEach((element) => {\r\n\t\t\t\tthis.render(element, container, false); // Rekurencyjnie renderuje każdy element z tablicy\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Sprawdzamy, czy to jest portal\r\n\t\tif (frameworkEl?.props?.isPortal) {\r\n\t\t\tthis.createPortal(frameworkEl.content, frameworkEl.targetContainer);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Obsługa stringów i liczb\r\n\t\tif (typeof frameworkEl === \"string\" || typeof frameworkEl === \"number\") {\r\n\t\t\tif (replace) {\r\n\t\t\t\tcontainer.innerHTML = \"\"; // Opróżnia kontener, jeśli replace jest true\r\n\t\t\t}\r\n\t\t\tcontainer.appendChild(document.createTextNode(frameworkEl)); // Dodaje tekst do kontenera\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Obsługa komponentów funkcyjnych\r\n\t\tif (frameworkEl && typeof frameworkEl.tag === \"function\") {\r\n\t\t\tthis.currentComponent = frameworkEl; // Ustawia aktualny komponent\r\n\t\t\tthis.stateIndex = 0; // Resetuje indeks stanu\r\n\t\t\tthis.effectIndex = 0; // Resetuje indeks efektu\r\n\t\t\tconst componentElement = frameworkEl.tag(frameworkEl.props); // Wywołuje funkcję komponentu\r\n\t\t\tthis.currentComponent = null;\r\n\r\n\t\t\tconst domNode = this.render(componentElement, container, replace); // Rekurencyjnie renderuje element\r\n\t\t\tthis.componentMap.set(frameworkEl, domNode); // Mapuje komponent na element DOM\r\n\t\t\treturn domNode;\r\n\t\t}\r\n\r\n\t\tif (replace && container.firstChild) {\r\n\t\t\tconst oldComponent = this.componentMap.get(container.firstChild);\r\n\t\t\tif (oldComponent) {\r\n\t\t\t\tthis.cleanupEffects(oldComponent); // Czyszczenie efektów, gdy komponent zostaje zastąpiony\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Tworzy rzeczywisty element DOM dla standardowych tagów\r\n\t\tconst actualDOMElement = document.createElement(frameworkEl?.tag);\r\n\r\n\t\tif (frameworkEl?.props && frameworkEl?.props.className) {\r\n\t\t\tactualDOMElement.className = frameworkEl.props.className; // Zastosowanie klasy CSS\r\n\t\t}\r\n\t\t// Aplikuje atrybuty (props) do utworzonego elementu, z wyłączeniem dzieci\r\n\t\tObject.keys(frameworkEl?.props || {})\r\n\t\t\t.filter((key) => key !== \"children\")\r\n\t\t\t.forEach((property) => {\r\n\t\t\t\tif (property.startsWith(\"on\")) {\r\n\t\t\t\t\t// Dodaje event listener, jeśli atrybut zaczyna się od \"on\"\r\n\t\t\t\t\tactualDOMElement.addEventListener(\r\n\t\t\t\t\t\tproperty.substring(2).toLowerCase(),\r\n\t\t\t\t\t\tframeworkEl.props[property]\r\n\t\t\t\t\t);\r\n\t\t\t\t} else if (property === \"className\") {\r\n\t\t\t\t\t// Obsługa klasy CSS\r\n\t\t\t\t\tactualDOMElement.className = frameworkEl.props[property];\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// Inne atrybuty\r\n\t\t\t\t\tactualDOMElement[property] = frameworkEl.props[property];\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t// Rekurencyjnie renderuje dzieci\r\n\t\tframeworkEl?.props?.children?.forEach((child) => {\r\n\t\t\tthis.render(child, actualDOMElement);\r\n\t\t});\r\n\r\n\t\t// Zastępuje zawartość kontenera, jeśli replace jest true\r\n\t\tif (replace) {\r\n\t\t\tcontainer.innerHTML = \"\";\r\n\t\t}\r\n\t\tcontainer.appendChild(actualDOMElement);\r\n\r\n\t\t// Uruchamia efekty po renderowaniu\r\n\t\tthis.runEffects(frameworkEl);\r\n\r\n\t\treturn actualDOMElement; // Zwraca element DOM\r\n\t},\r\n\r\n\t// Hook useState\r\n\tuseState: function (initialState) {\r\n\t\tconst component = this.currentComponent; // Pobiera aktualny komponent\r\n\r\n\t\tif (!component) {\r\n\t\t\tthrow new Error(\"useState must be called within a component\"); // Błąd, jeśli useState jest używany poza komponentem\r\n\t\t}\r\n\r\n\t\tconst stateIndex = this.stateIndex++; // Inkrementuje indeks stanu\r\n\t\tlet componentState = this.stateMap.get(component) || []; // Pobiera stan komponentu\r\n\r\n\t\tif (!componentState[stateIndex]) {\r\n\t\t\tcomponentState[stateIndex] = initialState; // Inicjalizuje stan, jeśli nie jest jeszcze ustawiony\r\n\t\t}\r\n\r\n\t\tconst setState = (newState) => {\r\n\t\t\tconst currentState = componentState[stateIndex]; // Bieżący stan\r\n\t\t\tconst updatedState =\r\n\t\t\t\ttypeof newState === \"function\" ? newState(currentState) : newState; // Nowy stan\r\n\r\n\t\t\tif (updatedState !== currentState) {\r\n\t\t\t\tcomponentState[stateIndex] = updatedState; // Aktualizuje stan, jeśli się zmienił\r\n\t\t\t\tMiniFramework.update(component); // Aktualizuje komponent\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthis.stateMap.set(component, componentState); // Aktualizuje mapę stanów\r\n\r\n\t\treturn [componentState[stateIndex], setState]; // Zwraca stan i funkcję do jego aktualizacji\r\n\t},\r\n\r\n\t// Hook useEffect\r\n\tuseEffect: function (effect, deps) {\r\n\t\tconst component = this.currentComponent; // Pobieramy aktualny komponent\r\n\r\n\t\tif (!component) {\r\n\t\t\tthrow new Error(\"useEffect must be called within a component\");\r\n\t\t}\r\n\r\n\t\tconst effectIndex = this.effectIndex++; // Pobieramy bieżący indeks efektu\r\n\t\tlet componentEffects = this.effectMap.get(component) || [];\r\n\r\n\t\tconst prevEffect = componentEffects[effectIndex];\r\n\r\n\t\t// Sprawdzamy, czy zależności uległy zmianie\r\n\t\tconst hasChanged =\r\n\t\t\t!prevEffect || !deps || deps.some((dep, i) => dep !== prevEffect.deps[i]);\r\n\r\n\t\tif (hasChanged) {\r\n\t\t\tif (prevEffect && prevEffect.cleanup) {\r\n\t\t\t\tprevEffect.cleanup(); // Czyszczenie poprzedniego efektu, jeśli istnieje\r\n\t\t\t}\r\n\r\n\t\t\tconst cleanup = effect(); // Wywołanie efektu i przechwycenie funkcji czyszczącej\r\n\t\t\tcomponentEffects[effectIndex] = { deps, cleanup };\r\n\t\t}\r\n\r\n\t\tthis.effectMap.set(component, componentEffects); // Zapis efektów w mapie\r\n\t},\r\n\r\n\t// Uruchamianie efektów po renderowaniu komponentu\r\n\trunEffects: function (component) {\r\n\t\tconst componentEffects = this.effectMap.get(component) || []; // Pobiera efekty komponentu\r\n\t\tcomponentEffects.forEach((effect) => {\r\n\t\t\tif (effect.cleanup) {\r\n\t\t\t\teffect.cleanup(); // Wywołuje funkcję czyszczącą efektu, jeśli istnieje\r\n\t\t\t}\r\n\t\t\teffect.cleanup = effect.effect(); // Uruchamia efekt i zapisuje funkcję czyszczącą\r\n\t\t});\r\n\t},\r\n\r\n\t// Obsługa przerywania efektów podczas odmontowywania komponentu\r\n\tcleanupEffects: function (component) {\r\n\t\tconst componentEffects = this.effectMap.get(component) || [];\r\n\t\tcomponentEffects.forEach((effect) => {\r\n\t\t\tif (effect.cleanup) {\r\n\t\t\t\teffect.cleanup(); // Wywołanie wszystkich funkcji czyszczących\r\n\t\t\t}\r\n\t\t});\r\n\t\tthis.effectMap.delete(component); // Usunięcie efektów z mapy po odmontowaniu\r\n\t},\r\n\r\n\tdiff: function (oldNode, newNode) {\r\n\t\tif (!oldNode || !newNode) return false; // Sprawdzenie, czy któryś z węzłów jest null\r\n\r\n\t\tif (typeof oldNode !== typeof newNode) return false;\r\n\t\tif (typeof newNode === \"string\" || typeof newNode === \"number\") {\r\n\t\t\treturn oldNode === newNode;\r\n\t\t}\r\n\t\tif (oldNode.tag !== newNode.tag) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tconst oldProps = oldNode.props || {};\r\n\t\tconst newProps = newNode.props || {};\r\n\r\n\t\tconst oldKeys = Object.keys(oldProps);\r\n\t\tconst newKeys = Object.keys(newProps);\r\n\r\n\t\tif (oldKeys.length !== newKeys.length) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tfor (let key of newKeys) {\r\n\t\t\tif (key === \"children\") continue;\r\n\t\t\tif (oldProps[key] !== newProps[key]) return false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t},\r\n\r\n\t// Aktualizacja komponentu\r\n\tupdate: function (component) {\r\n\t\tconst oldNode = this.componentMap.get(component);\r\n\t\tthis.currentComponent = component; // Ustawiamy `currentComponent`, żeby działały hooki\r\n\t\tconst newNode = component.tag(component.props); // Tworzymy nowy element komponentu\r\n\r\n\t\tif (component?.props?.isPortal) {\r\n\t\t\tthis.createPortal(\r\n\t\t\t\tcomponent.props.content,\r\n\t\t\t\tcomponent.props.targetContainer\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tif (!this.diff(oldNode, newNode)) {\r\n\t\t\tthis.cleanupEffects(component); // Czyścimy efekty przed ponownym renderowaniem\r\n\t\t\tconst domNode = this.render(component, oldNode, true);\r\n\t\t\tthis.componentMap.set(component, domNode);\r\n\t\t} else {\r\n\t\t\tthis.runEffects(component);\r\n\t\t}\r\n\t\tthis.currentComponent = null; // Czyszczenie `currentComponent` po aktualizacji\r\n\t},\r\n\r\n\t// Funkcja do tworzenia kontekstu\r\n\tcreateContext: function (defaultValue) {\r\n\t\tconst context = {\r\n\t\t\tdefaultValue, // Wartość domyślna kontekstu\r\n\t\t\tstate: defaultValue, // Bieżący stan kontekstu\r\n\t\t\tsubscribers: new Set(), // Zbiór subskrybentów aktualizacji kontekstu\r\n\t\t};\r\n\r\n\t\t// Funkcja do modyfikacji wartości kontekstu\r\n\t\tfunction setContextValue(newValue) {\r\n\t\t\tcontext.state = newValue; // Ustawia nową wartość stanu kontekstu\r\n\t\t\tcontext.subscribers.forEach((callback) => callback(newValue)); // Powiadamia subskrybentów o zmianie\r\n\t\t}\r\n\r\n\t\t// Komponent Provider umożliwiający aktualizację kontekstu\r\n\t\tfunction Provider({ value, children }) {\r\n\t\t\tif (value !== undefined) {\r\n\t\t\t\tsetContextValue(value); // Aktualizuje wartość kontekstu, jeśli została podana\r\n\t\t\t}\r\n\t\t\treturn children; // Renderuje dzieci\r\n\t\t}\r\n\r\n\t\t// Hook useContext do uzyskiwania wartości kontekstu\r\n\t\tfunction useContext() {\r\n\t\t\tconst [value, setValue] = MiniFramework.useState(context.state); // Uzyskuje aktualną wartość kontekstu\r\n\r\n\t\t\tMiniFramework.useEffect(() => {\r\n\t\t\t\tconst updateValue = (newValue) => setValue(newValue); // Funkcja aktualizująca stan z nową wartością kontekstu\r\n\t\t\t\tcontext.subscribers.add(updateValue); // Dodaje funkcję aktualizującą do subskrybentów\r\n\t\t\t\treturn () => context.subscribers.delete(updateValue); // Usuwa funkcję z subskrybentów podczas odmontowania\r\n\t\t\t}, []);\r\n\r\n\t\t\treturn value; // Zwraca wartość kontekstu\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tProvider, // Komponent Provider\r\n\t\t\tuseContext, // Hook useContext\r\n\t\t\tsetContextValue, // Funkcja do zmiany wartości kontekstu\r\n\t\t};\r\n\t},\r\n\tuseStyle: function (styles) {\r\n\t\tconst component = this.currentComponent;\r\n\t\tif (!component) {\r\n\t\t\tthrow new Error(\"useStyle must be called within a component\");\r\n\t\t}\r\n\r\n\t\tconst styleTagId = `style-${component.tag.name}`;\r\n\t\tlet styleTag = document.getElementById(styleTagId);\r\n\r\n\t\tif (!styleTag) {\r\n\t\t\tstyleTag = document.createElement(\"style\");\r\n\t\t\tstyleTag.id = styleTagId;\r\n\t\t\tdocument.head.appendChild(styleTag);\r\n\t\t}\r\n\r\n\t\tconst className = `class-${component.tag.name}-${Math.random()\r\n\t\t\t.toString(36)\r\n\t\t\t.substr(2, 5)}`;\r\n\r\n\t\t// Konwersja stylów z camelCase na kebab-case\r\n\t\tconst css = `\r\n\t\t\t.${className} {\r\n\t\t\t\t${Object.entries(styles)\r\n\t\t\t\t\t.map(([key, value]) => {\r\n\t\t\t\t\t\tconst kebabKey = key\r\n\t\t\t\t\t\t\t.replace(/([a-z])([A-Z])/g, \"$1-$2\")\r\n\t\t\t\t\t\t\t.toLowerCase();\r\n\t\t\t\t\t\treturn `${kebabKey}: ${value};`;\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.join(\" \")}\r\n\t\t\t}\r\n\t\t`;\r\n\r\n\t\t// Dodawanie nowego CSS do istniejącego styleTag\r\n\t\tstyleTag.appendChild(document.createTextNode(css));\r\n\r\n\t\treturn className;\r\n\t},\r\n};\r\n\r\n// Klasa bazowa dla komponentów\r\nclass MiniComponent {\r\n\tconstructor(props) {\r\n\t\tthis.props = props; // Przypisanie właściwości (props) do instancji komponentu\r\n\t\tthis.state = {}; // Inicjalizacja stanu komponentu jako pustego obiektu\r\n\t\tthis.willInit(); // Wywołanie metody willInit (przed montowaniem komponentu)\r\n\t\tthis.mount(); // Wywołanie metody mount (montowanie komponentu)\r\n\t\tthis.didInit(); // Wywołanie metody didInit (po zamontowaniu komponentu)\r\n\t}\r\n\r\n\twillInit() {} // Metoda wywoływana przed montowaniem komponentu\r\n\r\n\tdidInit() {} // Metoda wywoływana po zamontowaniu komponentu\r\n\r\n\tdidUpdate() {} // Metoda wywoływana po aktualizacji komponentu\r\n\r\n\tmainDiv() {\r\n\t\tthis.name = this.constructor.name; // Przypisuje nazwę klasy do zmiennej name\r\n\t\treturn `${this.constructor.name}`; // Zwraca nazwę klasy jako string\r\n\t}\r\n\r\n\t// Ustawia nowy stan komponentu\r\n\tsetState(partialState) {\r\n\t\tthis.state = { ...this.state, ...partialState }; // Aktualizuje stan komponentu\r\n\t\tMiniFramework.update(this); // Aktualizuje komponent w DOM\r\n\t}\r\n\r\n\t// Metoda montująca, musi być zaimplementowana przez podklasę\r\n\tmount() {\r\n\t\tthrow new Error(\"Component subclass must implement mount method.\"); // Rzuca błąd, jeśli metoda nie została zaimplementowana\r\n\t}\r\n\r\n\t// Oznacza, że jest to komponent kompatybilny z Reactem\r\n\tstatic isReactComponent = true;\r\n}\r\n\r\n// Dodanie klasy MiniComponent do MiniFramework jako jego składnik\r\nMiniFramework.Component = MiniComponent;\r\n\r\nexport default MiniFramework;\r\n","import MiniFramework from \"../Modules/MiniFramework\";\r\nimport image from \"./1.jpg\";\r\nimport { MyContext } from \"./Context\";\r\nconst ImageComp = () => {\r\n\tconst contextValue = MyContext.useContext();\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<img name=\"image\" id=\"image\" src={image} alt=\"fireSpot\" />\r\n\t\t\t<br />\r\n\t\t\t<label for=\"image\" style=\"color: white\">\r\n\t\t\t\tImportowane zdjęcie w jsx\r\n\t\t\t</label>\r\n\t\t\t<p>Wartość contextu w innym componencie: {contextValue.count}</p>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ImageComp;\r\n","module.exports = new __parcel__URL__(\"1.e0d42b70.jpg\").toString();","import MiniFramework from \"../Modules/MiniFramework\";\r\n\r\nexport const MyContext = MiniFramework.createContext(\"cok\");\r\n","import MiniFramework from \"../Modules/MiniFramework\";\r\n\r\nconst State1 = (props) => {\r\n\tconst [state, setState] = MiniFramework.useState({ count: 0 });\r\n\r\n\tconst increment = () => {\r\n\t\tsetState((prevState) => ({ count: prevState.count + 1 }));\r\n\t};\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<p>Count: {state.count}</p>\r\n\t\t\t<button\r\n\t\t\t\tonClick={() => {\r\n\t\t\t\t\tincrement();\r\n\t\t\t\t\tconsole.log(\"cok\");\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\tIncrement\r\n\t\t\t</button>\r\n\t\t\t<p style=\"color: white\">\r\n\t\t\t\tZmiana stanu i dynamiczne renderowanie w komponentach funkcyjnych\r\n\t\t\t</p>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default State1;\r\n","import MiniFramework from \"../Modules/MiniFramework\";\r\nimport { MyContext } from \"./Context\";\r\n\r\nconst State2 = () => {\r\n\tconst contextValue = MyContext.useContext();\r\n\tconst [state, setState] = MiniFramework.useState(contextValue);\r\n\r\n\tconst increment = () => {\r\n\t\tsetState((prevState) => ({ count: prevState.count + 1 }));\r\n\t};\r\n\r\n\t// Funkcja do aktualizacji wartości kontekstu\r\n\tconst updateContext = () => {\r\n\t\tMyContext.setContextValue({ count: state.count + 1 });\r\n\t\tconsole.log(contextValue);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<p>Count: {contextValue.count}</p>\r\n\t\t\t<button\r\n\t\t\t\tonClick={() => {\r\n\t\t\t\t\tincrement();\r\n\t\t\t\t\tupdateContext(); // Aktualizuj kontekst po inkrementacji\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\tIncrement\r\n\t\t\t</button>\r\n\t\t\t<p style={{ color: \"white\" }}>Contextowa zmiana stanu</p>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default State2;\r\n","import MiniFramework from \"../Modules/MiniFramework\";\r\n\r\nconst MapComp = () => {\r\n\tconst exampleStrings = [\r\n\t\t\"Hello, world!\",\r\n\t\t\"JavaScript is awesome.\",\r\n\t\t\"Let's learn to code.\",\r\n\t\t\"Arrays can hold multiple values.\",\r\n\t\t\"This is a string example.\",\r\n\t\t\"Have a great day!\",\r\n\t\t\"Coding is fun!\",\r\n\t\t\"Happy coding!\",\r\n\t\t\"OpenAI creates amazing tools.\",\r\n\t\t\"ChatGPT is here to help.\",\r\n\t];\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{exampleStrings.map((elem) => {\r\n\t\t\t\treturn <p style=\"\">{elem}</p>;\r\n\t\t\t})}\r\n\t\t\t<p style=\"color: white\">Generowanie dynamicznych list znaczników</p>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default MapComp;\r\n","import MiniFramework from \"../Modules/MiniFramework\";\r\n\r\nconst Effect = () => {\r\n\tconst [count, setCount] = MiniFramework.useState({ count: 0 });\r\n\r\n\t\r\n\r\n\tMiniFramework.useEffect(() => {\r\n\t\tconsole.log(\"Component mounted or updated!\");\r\n\r\n\t\t// Cleanup logic when the component unmounts or before the next effect\r\n\t\treturn () => {\r\n\t\t\tconsole.log(\"Cleanup on unmount or update\");\r\n\t\t};\r\n\t}, [count]);\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<p>Count: {count.count}</p>\r\n\t\t\t<button\r\n\t\t\t\tonClick={() =>\r\n\t\t\t\t\tsetCount((prevState) => ({ count: prevState.count + 1 }))\r\n\t\t\t\t}\r\n\t\t\t>\r\n\t\t\t\tIncrement\r\n\t\t\t</button>\r\n\r\n\t\t\t<p style=\"color: white\">useEffect, metoda cyklu życia komponentu </p>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Effect;\r\n","import MiniFramework from \"../Modules/MiniFramework\";\r\n\r\nconst StyledComp = () => {\r\n\tconst className = MiniFramework.useStyle({\r\n\t\tbackgroundColor: \"lightblue\",\r\n\t\tpadding: \"10px\",\r\n\t\tborderRadius: \"5px\",\r\n\t\tborder: \"1px solid black\",\r\n\t});\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div className={className}>\r\n\t\t\t\t<p>This component is styled using CSS-in-JS!</p>\r\n\t\t\t</div>\r\n\t\t\t<p>Komponent stylowany za pomocą JS-CSS</p>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default StyledComp;\r\n","import MiniFramework from \"../Modules/MiniFramework\";\r\n\r\nconst Modal = ({ children }) => {\r\n\tconst style = {\r\n\t\tbackgroundColor: \"rgba(0,0,0,0.5)\",\r\n\t\tpadding: \"20px\",\r\n\t\tborderRadius: \"10px\",\r\n\t\tposition: \"absolute\",\r\n\t\twidth: \"90vw\",\r\n\t\theight: \"90vh\",\r\n\t};\r\n\r\n\treturn MiniFramework.createPortal(\r\n\t\t<div style={style} isPortal className=\"modal\">\r\n\t\t\tcok\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Modal;\r\n"],"names":["$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","parcelRegister","Object","defineProperty","get","$18c11f3350a906ea$export$6503ec6e8aabbaf","set","v","enumerable","configurable","$18c11f3350a906ea$var$mapping","Map","baseUrl","manifest","i","length","path","URL","url","toString","JSON","parse","$2cab054d75d19b20$var$MiniFramework","currentComponent","stateIndex","effectIndex","stateMap","WeakMap","effectMap","componentMap","contextMap","createElement","tag","props","children","isReactComponent","prototype","componentInstance","willInit","componentElement","mount","didInit","createPortal","frameworkEl","targetContainer","document","getElementById","render","console","error","container","replace","isPortal","log","content","Array","isArray","innerHTML","forEach","element","appendChild","createTextNode","domNode","firstChild","oldComponent","cleanupEffects","actualDOMElement","className","keys","filter","key","property","startsWith","addEventListener","substring","toLowerCase","child","runEffects","useState","initialState","component","componentState","newState","currentState","updatedState","update","useEffect","effect","deps","componentEffects","prevEffect","some","dep","cleanup","delete","diff","oldNode","newNode","oldProps","newProps","oldKeys","newKeys","createContext","defaultValue","context","state","subscribers","Set","setContextValue","newValue","callback","Provider","value","undefined","useContext","setValue","updateValue","add","useStyle","styles","styleTagId","name","styleTag","head","Math","random","substr","css","entries","map","kebabKey","join","Component","constructor","didUpdate","mainDiv","setState","partialState","$da213b5f3a51cb98$exports","$5ef62667ecd041d3$export$8422ab6fc7dd9f03","count","a","contextValue","src","__esModule","default","alt","for","style","increment","prevState","onClick","exampleStrings","elem","setCount","updateContext","color","backgroundColor","padding","borderRadius","border","position","width","height","querySelector","App","MiniFramework","ImageComp","State1","State2","MapComp","Effect","StyledComp","MyContext","Modal","hasChanged","MiniComponent","image"],"version":3,"file":"index.6d309c9d.js.map"}